/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**stateRepHeader.tlt
*********************************************************************/
 
//! \file bathymetryStateRepository.h
//! \brief Contains the DtOCEAN2020FOMBathymetryStateRepository class declaration.
//! \ingroup OCEAN2020FOM_Environmental
 
#pragma once
 
#include "dllExport.h"
#include "VS_EnvironmentStateRepository.h"
#include <matrix/vlVector.h>
#include <vl/globalObjectDesignator.h>
#include <vl/hlaLogicalTime.h>
#include <vl/hlaLogicalTimeInterval.h>
#include <vlpi/entityType.h>
#include <vlpi/entityIdentifier.h>
#include <vlutil/vlString.h>
#include "DataTypes/OCEAN2020FOM_EnvironmentalEnums.h"
#include <vector>
 
#include "DataTypes/OCEAN2020FOMVariableLengthFloat64Array.h"

namespace OCEAN2020 {
 
//! Instances of DtOCEAN2020FOMBathymetryStateRepository are used to store state data for
//! VS_Environment.Bathymetry objects.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMBathymetryStateRepository : public DtOCEAN2020FOMVS_EnvironmentStateRepository
{
public:
   //! Constructor.
   DtOCEAN2020FOMBathymetryStateRepository();
 
   //! Destructor.
   virtual ~DtOCEAN2020FOMBathymetryStateRepository();
 
   //! Copy Constructor.
   DtOCEAN2020FOMBathymetryStateRepository(const DtOCEAN2020FOMBathymetryStateRepository& orig);
 
   //! Assignment Operator.
   DtOCEAN2020FOMBathymetryStateRepository& operator=(const DtOCEAN2020FOMBathymetryStateRepository& orig);
 
   //! Return a copy/empty object of the same type as this.
   virtual DtStateRepository* clone(bool copy) const;
 
   //! Create a DtOCEAN2020FOMBathymetryStateRepository.
   static DtOCEAN2020FOMBathymetryStateRepository* create();
   
   //! Print data to the DtInfo stream
   virtual void printData() const;
 
   //! Print data to the specified stream
   virtual void printDataToStream(std::ostream& stream) const;
 

   //! Set the DepthValues.
   virtual void setDepthValues(const DtOCEAN2020FOMVariableLengthFloat64Array& val);
 
   //! Get the DepthValues."
   virtual const DtOCEAN2020FOMVariableLengthFloat64Array& depthValues() const;

protected:
   DtOCEAN2020FOMVariableLengthFloat64Array myDepthValues;
};

} //end OCEAN2020
