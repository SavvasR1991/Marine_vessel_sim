/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**hobjDecHeader.tlt
*********************************************************************/
 
//! \file waterSurfaceDecoderHLA.h
//! \brief Contains the DtOCEAN2020FOMWaterSurfaceDecoder class declaration.
//! \ingroup OCEAN2020FOM_Environmental
 
#pragma once
 
#if DtHLA 
 
#include "VS_EnvironmentDecoderHLA.h"
#include "dllExport.h"
 
namespace OCEAN2020 {
 
class DtOCEAN2020FOMWaterSurfaceStateRepository;
 
//! Instances of DtOCEAN2020FOMWaterSurfaceDecoder are used to decode
//! data from the network into DtOCEAN2020FOMWaterSurfaceStateRepository objects.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMWaterSurfaceDecoder : public DtOCEAN2020FOMVS_EnvironmentDecoder
{
public:
   //! Default constructor.
   DtOCEAN2020FOMWaterSurfaceDecoder(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
 
   //! Destructor.
   virtual ~DtOCEAN2020FOMWaterSurfaceDecoder();
 
   //! Copy constructor.
   DtOCEAN2020FOMWaterSurfaceDecoder(const DtOCEAN2020FOMWaterSurfaceDecoder& orig);
 
   //! Assignment operator.
   DtOCEAN2020FOMWaterSurfaceDecoder& operator=(const DtOCEAN2020FOMWaterSurfaceDecoder& orig);
 
public:
   //! Creates an instance of DtOCEAN2020FOMWaterSurfaceDecoder.
   static DtHlaStateDecoder* create(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
 
protected:
   
//! Decodes BreakingWaveZone from attrs into rep.
   static void decodeBreakingWaveZone(
      DtOCEAN2020FOMWaterSurfaceStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Wave_frequency from attrs into rep.
   static void decodeWave_frequency(
      DtOCEAN2020FOMWaterSurfaceStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Wave_height from attrs into rep.
   static void decodeWave_height(
      DtOCEAN2020FOMWaterSurfaceStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Wave_direction from attrs into rep.
   static void decodeWave_direction(
      DtOCEAN2020FOMWaterSurfaceStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);

};
 
} //end OCEAN2020
 
#endif
