/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**hobjDecHeader.tlt
*********************************************************************/
 
//! \file waterColumnDecoderHLA.h
//! \brief Contains the DtOCEAN2020FOMWaterColumnDecoder class declaration.
//! \ingroup OCEAN2020FOM_Environmental
 
#pragma once
 
#if DtHLA 
 
#include "VS_EnvironmentDecoderHLA.h"
#include "dllExport.h"
 
namespace OCEAN2020 {
 
class DtOCEAN2020FOMWaterColumnStateRepository;
 
//! Instances of DtOCEAN2020FOMWaterColumnDecoder are used to decode
//! data from the network into DtOCEAN2020FOMWaterColumnStateRepository objects.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMWaterColumnDecoder : public DtOCEAN2020FOMVS_EnvironmentDecoder
{
public:
   //! Default constructor.
   DtOCEAN2020FOMWaterColumnDecoder(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
 
   //! Destructor.
   virtual ~DtOCEAN2020FOMWaterColumnDecoder();
 
   //! Copy constructor.
   DtOCEAN2020FOMWaterColumnDecoder(const DtOCEAN2020FOMWaterColumnDecoder& orig);
 
   //! Assignment operator.
   DtOCEAN2020FOMWaterColumnDecoder& operator=(const DtOCEAN2020FOMWaterColumnDecoder& orig);
 
public:
   //! Creates an instance of DtOCEAN2020FOMWaterColumnDecoder.
   static DtHlaStateDecoder* create(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
 
protected:
   
//! Decodes NumberOfLayers from attrs into rep.
   static void decodeNumberOfLayers(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes WaterDepth from attrs into rep.
   static void decodeWaterDepth(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes ShallowerLayer from attrs into rep.
   static void decodeShallowerLayer(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes DeeperLayer from attrs into rep.
   static void decodeDeeperLayer(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Current_intensity from attrs into rep.
   static void decodeCurrent_intensity(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Current_direction from attrs into rep.
   static void decodeCurrent_direction(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Salinity from attrs into rep.
   static void decodeSalinity(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Temperature from attrs into rep.
   static void decodeTemperature(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);
   
//! Decodes Transparency from attrs into rep.
   static void decodeTransparency(
      DtOCEAN2020FOMWaterColumnStateRepository* rep,
      const RTI::AttributeHandleValuePairSet& attrs,
      int pairSetIndex);

};
 
} //end OCEAN2020
 
#endif
