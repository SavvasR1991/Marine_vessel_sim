/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**hpubHeader.tlt
*********************************************************************/
 
//! \file waterColumnPublisherHLA.h
//! \brief Contains the DtOCEAN2020FOMWaterColumnPublisher class declaration.
//! \ingroup OCEAN2020FOM_Environmental
 
#pragma once
 
#if DtHLA
 
#include <vl/objectPublisherHLA.h>
#include "dllExport.h"
 
namespace OCEAN2020 {
 
class DtOCEAN2020FOMWaterColumnStateRepository;
 
//! Instances of DtOCEAN2020FOMWaterColumnPublisher publish
//! VS_Environment.WaterColumn objects to
//! the network.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMWaterColumnPublisher : public DtObjectPublisher
{
public:
   //! Function prototype for a function that creates a DtOCEAN2020FOMWaterColumnStateRepository
   typedef DtOCEAN2020FOMWaterColumnStateRepository* (*DtStateRepCreator)();
 
public:
   //! Constructor.
   DtOCEAN2020FOMWaterColumnPublisher(
      DtOCEAN2020FOMWaterColumnStateRepository* stateRepToUse,
      DtExerciseConn* conn,
      const char* name = 0,
      const DtDDMRegionSet* regionSetToUse = 0);
 
   //! Constructor.
   DtOCEAN2020FOMWaterColumnPublisher(
      RTI::ObjectClassHandle h,
      DtExerciseConn* conn,
      const char* name = 0,
      const DtDDMRegionSet* regionSetToUse = 0);
 
   //! Constructor.
   DtOCEAN2020FOMWaterColumnPublisher(
      DtExerciseConn* conn,
      const char* name = 0,
      const DtDDMRegionSet* regionSetToUse = 0);
 
   //! Constructor that creates a publisher for an existing DtHlaObject.
   //! (DtHlaObjectWithStateRep is derived from DtHlaObject.)  Typically used
   //! in conjunction with ownership management, when you want to take
   //! ownership and begin updating some attributes of an object that you have
   //! already discovered.
   DtOCEAN2020FOMWaterColumnPublisher( DtHlaObjectWithStateRep* obj, DtExerciseConn* conn);
 
   //! The Object class name (VS_Environment.WaterColumn)
   static const char * objectClassName();
   
   //! Destructor.
   virtual ~DtOCEAN2020FOMWaterColumnPublisher();
 
private:
   //! Copy Constructor -- not implemented.
   DtOCEAN2020FOMWaterColumnPublisher(const DtOCEAN2020FOMWaterColumnPublisher& orig);
 
   //! Assignment operator -- not implemented.
   DtOCEAN2020FOMWaterColumnPublisher& operator=(
      const DtOCEAN2020FOMWaterColumnPublisher& orig);
 
public:
 
   //! Returns a pointer to the DtOCEAN2020FOMWaterColumnStateRepository - through
   //! which you can set or inspect current state information.
   virtual DtOCEAN2020FOMWaterColumnStateRepository* waterColumnStateRep();
 
   //! Synonym for waterColumnStateRep().
   virtual DtOCEAN2020FOMWaterColumnStateRepository* wsr();
 
public:
   //! Give us a function to be used for creating SRs.
   static DtStateRepCreator setStateRepCreator(DtStateRepCreator creator);
 
protected:
   static DtStateRepCreator theStateRepCreator;
};
 
inline DtOCEAN2020FOMWaterColumnStateRepository* DtOCEAN2020FOMWaterColumnPublisher::waterColumnStateRep()
{
   return (DtOCEAN2020FOMWaterColumnStateRepository*) myStateRep;
}
 
inline DtOCEAN2020FOMWaterColumnStateRepository* DtOCEAN2020FOMWaterColumnPublisher::wsr()
{
   return (DtOCEAN2020FOMWaterColumnStateRepository*) myStateRep;
}
 
} //end OCEAN2020
 
#endif
