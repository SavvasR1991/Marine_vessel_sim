/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**hobjEncHeader.tlt
*********************************************************************/
 
//! \file VS_EnvironmentEncoderHLA.h
//! \brief Contains the DtOCEAN2020FOMVS_EnvironmentEncoder class declaration.
 
#pragma once
 
#if DtHLA
 
#include <vl/hlaStateEncoder.h>
#include "dllExport.h"
 
namespace OCEAN2020 {
 
class DtOCEAN2020FOMVS_EnvironmentStateRepository;
 
//! Instances of DtOCEAN2020FOMVS_EnvironmentEncoder encode data
//! from DtOCEAN2020FOMVS_EnvironmentStateRepository objects to the net
//! structures to be sent to the network.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMVS_EnvironmentEncoder : public DtHlaStateEncoder
{
public:
 
   //! Default constructor.
   DtOCEAN2020FOMVS_EnvironmentEncoder(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
 
   //! Destructor.
   virtual ~DtOCEAN2020FOMVS_EnvironmentEncoder();
 
   //! Copy constructor.
   DtOCEAN2020FOMVS_EnvironmentEncoder(const DtOCEAN2020FOMVS_EnvironmentEncoder& orig);
 
   //! Assignment operator.
   DtOCEAN2020FOMVS_EnvironmentEncoder& operator=(const DtOCEAN2020FOMVS_EnvironmentEncoder& orig);
 
public:
   //! Function that creates a DtOCEAN2020FOMVS_EnvironmentEncoder.
   static DtHlaStateEncoder* create(
      DtExerciseConn* exConn,
      DtObjClassDesc* classDesc);
   
protected:

   //! Return true if NumRows needs to be sent
   //! to the network, false otherwise.
   static bool needNumRows(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes NumRows from rep into attrs.
   static void encodeNumRows(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

   //! Return true if NumColumns needs to be sent
   //! to the network, false otherwise.
   static bool needNumColumns(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes NumColumns from rep into attrs.
   static void encodeNumColumns(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

   //! Return true if NWCornerLatitude needs to be sent
   //! to the network, false otherwise.
   static bool needNWCornerLatitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes NWCornerLatitude from rep into attrs.
   static void encodeNWCornerLatitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

   //! Return true if NWCornerLongitude needs to be sent
   //! to the network, false otherwise.
   static bool needNWCornerLongitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes NWCornerLongitude from rep into attrs.
   static void encodeNWCornerLongitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

   //! Return true if SECornerLatitude needs to be sent
   //! to the network, false otherwise.
   static bool needSECornerLatitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes SECornerLatitude from rep into attrs.
   static void encodeSECornerLatitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

   //! Return true if SECornerLongitude needs to be sent
   //! to the network, false otherwise.
   static bool needSECornerLongitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& stateRep, 
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& asSeenByRemote);
 
   //! Encodes SECornerLongitude from rep into attrs.
   static void encodeSECornerLongitude(
      const DtOCEAN2020FOMVS_EnvironmentStateRepository& rep,
      RTI::AttributeHandleValuePairSet* attrs,
      RTI::AttributeHandle attrHandle);

};
 
} //end OCEAN2020
 
#endif
