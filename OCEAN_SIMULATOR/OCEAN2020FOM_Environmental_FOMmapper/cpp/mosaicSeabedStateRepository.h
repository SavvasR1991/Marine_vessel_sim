/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**stateRepHeader.tlt
*********************************************************************/
 
//! \file mosaicSeabedStateRepository.h
//! \brief Contains the DtOCEAN2020FOMMosaicSeabedStateRepository class declaration.
//! \ingroup OCEAN2020FOM_Environmental
 
#pragma once
 
#include "dllExport.h"
#include "VS_EnvironmentStateRepository.h"
#include <matrix/vlVector.h>
#include <vl/globalObjectDesignator.h>
#include <vl/hlaLogicalTime.h>
#include <vl/hlaLogicalTimeInterval.h>
#include <vlpi/entityType.h>
#include <vlpi/entityIdentifier.h>
#include <vlutil/vlString.h>
#include "DataTypes/OCEAN2020FOM_EnvironmentalEnums.h"
#include <vector>
 
#include "DataTypes/OCEAN2020FOMMosaicCellVariableArray_Float32.h"

namespace OCEAN2020 {
 
//! Instances of DtOCEAN2020FOMMosaicSeabedStateRepository are used to store state data for
//! VS_Environment.MosaicSeabed objects.
//! \ingroup OCEAN2020FOM_Environmental
class DT_DLL_OCEAN2020FOM_ENVIRONMENTAL DtOCEAN2020FOMMosaicSeabedStateRepository : public DtOCEAN2020FOMVS_EnvironmentStateRepository
{
public:
   //! Constructor.
   DtOCEAN2020FOMMosaicSeabedStateRepository();
 
   //! Destructor.
   virtual ~DtOCEAN2020FOMMosaicSeabedStateRepository();
 
   //! Copy Constructor.
   DtOCEAN2020FOMMosaicSeabedStateRepository(const DtOCEAN2020FOMMosaicSeabedStateRepository& orig);
 
   //! Assignment Operator.
   DtOCEAN2020FOMMosaicSeabedStateRepository& operator=(const DtOCEAN2020FOMMosaicSeabedStateRepository& orig);
 
   //! Return a copy/empty object of the same type as this.
   virtual DtStateRepository* clone(bool copy) const;
 
   //! Create a DtOCEAN2020FOMMosaicSeabedStateRepository.
   static DtOCEAN2020FOMMosaicSeabedStateRepository* create();
   
   //! Print data to the DtInfo stream
   virtual void printData() const;
 
   //! Print data to the specified stream
   virtual void printDataToStream(std::ostream& stream) const;
 

   //! Set the BT_Clutter.
   virtual void setBT_Clutter(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Clutter."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Clutter() const;

   //! Set the BT_Clutter_Var.
   virtual void setBT_Clutter_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Clutter_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Clutter_Var() const;

   //! Set the BT_Posidonia.
   virtual void setBT_Posidonia(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Posidonia."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Posidonia() const;

   //! Set the BT_Posidonia_Var.
   virtual void setBT_Posidonia_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Posidonia_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Posidonia_Var() const;

   //! Set the BT_PosidoniaRipples.
   virtual void setBT_PosidoniaRipples(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_PosidoniaRipples."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_PosidoniaRipples() const;

   //! Set the BT_PosidoniaRipples_Var.
   virtual void setBT_PosidoniaRipples_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_PosidoniaRipples_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_PosidoniaRipples_Var() const;

   //! Set the BT_Ripples.
   virtual void setBT_Ripples(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Ripples."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Ripples() const;

   //! Set the BT_Ripples_Var.
   virtual void setBT_Ripples_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Ripples_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Ripples_Var() const;

   //! Set the BT_SMO.
   virtual void setBT_SMO(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_SMO."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_SMO() const;

   //! Set the BT_SMO_Var.
   virtual void setBT_SMO_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_SMO_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_SMO_Var() const;

   //! Set the BT_Ripple_Angl.
   virtual void setBT_Ripple_Angl(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Ripple_Angl."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Ripple_Angl() const;

   //! Set the BT_Ripple_Angl_Var.
   virtual void setBT_Ripple_Angl_Var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the BT_Ripple_Angl_Var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& BT_Ripple_Angl_Var() const;

   //! Set the Clusters.
   virtual void setClusters(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Clusters."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& clusters() const;

   //! Set the DPCA.
   virtual void setDPCA(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the DPCA."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& DPCA() const;

   //! Set the Lacunarity.
   virtual void setLacunarity(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Lacunarity."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& lacunarity() const;

   //! Set the Py_b0.
   virtual void setPy_b0(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Py_b0."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& py_b0() const;

   //! Set the Py_b1.
   virtual void setPy_b1(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Py_b1."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& py_b1() const;

   //! Set the Py_b2.
   virtual void setPy_b2(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Py_b2."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& py_b2() const;

   //! Set the Ripple.
   virtual void setRipple(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the Ripple."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& ripple() const;

   //! Set the RRM_E.
   virtual void setRRM_E(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the RRM_E."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& RRM_E() const;

   //! Set the RRM_var.
   virtual void setRRM_var(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the RRM_var."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& RRM_var() const;

   //! Set the SurveyStatus.
   virtual void setSurveyStatus(const DtOCEAN2020FOMMosaicCellVariableArray_Float32& val);
 
   //! Get the SurveyStatus."
   virtual const DtOCEAN2020FOMMosaicCellVariableArray_Float32& surveyStatus() const;

protected:
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Clutter;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Clutter_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Posidonia;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Posidonia_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_PosidoniaRipples;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_PosidoniaRipples_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Ripples;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Ripples_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_SMO;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_SMO_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Ripple_Angl;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myBT_Ripple_Angl_Var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myClusters;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myDPCA;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myLacunarity;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myPy_b0;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myPy_b1;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myPy_b2;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myRipple;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myRRM_E;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 myRRM_var;
   DtOCEAN2020FOMMosaicCellVariableArray_Float32 mySurveyStatus;
};

} //end OCEAN2020
