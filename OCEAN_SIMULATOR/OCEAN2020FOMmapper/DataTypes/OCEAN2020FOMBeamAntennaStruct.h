/*********************************************************************
**This file was generated by MAK Technologies' VR-Link Code Generator.
**fixedRecordsHeader.tlt
*********************************************************************/
 
#pragma once
 
#include "../dllExportOCEAN2020FOM_SISOSTD00112015.h"
#include "OCEAN2020FOM_SISOSTD00112015Enums.h"
#include <vlutil/vlMachineTypes.h>
#include <vlutil/vlString.h>
#include <vl/globalObjectDesignator.h>
#include <vlpi/entityType.h>
#include <vlpi/entityIdentifier.h>
#include <matrix/vlVector.h>
#include <vector>
 
 namespace OCEAN2020 {
 
//! \class  DtOCEAN2020FOMBeamAntennaStruct
 
//! \ingroup OCEAN2020FOM_SISOSTD00112015
class DT_DLL_OCEAN2020FOM_SISOSTD00112015 DtOCEAN2020FOMBeamAntennaStruct
{
public:
   DtOCEAN2020FOMBeamAntennaStruct();
   ~DtOCEAN2020FOMBeamAntennaStruct();
   DtOCEAN2020FOMBeamAntennaStruct(const DtOCEAN2020FOMBeamAntennaStruct& orig);
   DtOCEAN2020FOMBeamAntennaStruct& operator=(const DtOCEAN2020FOMBeamAntennaStruct& orig);

   virtual void setBeamOrientation(const DtTaitBryan& val);
   virtual const DtTaitBryan& beamOrientation() const;
   virtual void setBeamAzimuthBeamwidth(const DtFloat32& val);
   virtual const DtFloat32& beamAzimuthBeamwidth() const;
   virtual void setBeamElevationBeamwidth(const DtFloat32& val);
   virtual const DtFloat32& beamElevationBeamwidth() const;
   virtual void setReferenceSystem(const DtU8& val);
   virtual const DtU8& referenceSystem() const;
   virtual void setEz(const DtFloat32& val);
   virtual const DtFloat32& ez() const;
   virtual void setEx(const DtFloat32& val);
   virtual const DtFloat32& ex() const;
   virtual void setBeamPhaseAngle(const DtFloat32& val);
   virtual const DtFloat32& beamPhaseAngle() const;
 
   bool operator==(const DtOCEAN2020FOMBeamAntennaStruct& other) const;
   bool operator!=(const DtOCEAN2020FOMBeamAntennaStruct& other) const;
 
   int netSize() const;
   static int octetBoundary();
   unsigned int getPaddingSize(unsigned int byteOffset, unsigned int boundary) const;
 
   void writeToBuffer( char* buffer ) const;
   void fillFromBuffer( const char* buffer, int bufferSize, int offset );
 
   virtual void printData() const;
   virtual void printDataToStream(std::ostream &) const;
 
protected:
 
   DtTaitBryan myBeamOrientation;
   DtFloat32 myBeamAzimuthBeamwidth;
   DtFloat32 myBeamElevationBeamwidth;
   DtU8 myReferenceSystem;
   DtFloat32 myEz;
   DtFloat32 myEx;
   DtFloat32 myBeamPhaseAngle;
};
 
DT_DLL_OCEAN2020FOM_SISOSTD00112015 std::ostream& operator<<(std::ostream& stream, const DtOCEAN2020FOMBeamAntennaStruct&);

} //end OCEAN2020
